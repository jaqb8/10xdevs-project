name: Pull Request

on:
  pull_request:
    branches:
      - staging
      - master

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint:check

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: unit-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Create test environment file
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env.test
          echo "SUPABASE_PUBLIC_KEY=${{ secrets.SUPABASE_PUBLIC_KEY }}" >> .env.test
          echo "USE_MOCKS=${{ vars.USE_MOCKS }}" >> .env.test
          echo "E2E_USERNAME=${{ secrets.E2E_USERNAME }}" >> .env.test
          echo "E2E_PASSWORD=${{ secrets.E2E_PASSWORD }}" >> .env.test
          echo "E2E_USER_ID=${{ secrets.E2E_USER_ID }}" >> .env.test
          echo "PUBLIC_ENV_NAME=${{ vars.ENV_NAME }}" >> .env.test

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7
          if-no-files-found: warn

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always()
    permissions:
      pull-requests: write
    steps:
      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v8
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.issue.number;
            return { owner, repo, pr_number };

      - name: Download unit test coverage
        uses: actions/download-artifact@v6
        continue-on-error: true
        with:
          name: unit-coverage
          path: coverage/

      - name: Download E2E test results
        uses: actions/download-artifact@v6
        continue-on-error: true
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/

      - name: Create status comment
        uses: actions/github-script@v8
        if: ${{ needs.unit-test.result == 'success' && needs.e2e-test.result == 'success' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, pr_number } = ${{ steps.pr_details.outputs.result }};

            github.rest.issues.createComment({
            owner,
            repo,
            issue_number: pr_number,
            body: `✅ All checks have passed successfully!\n\n` +
                    `- Lint: ✅\n` +
                    `- Unit Tests: ✅\n` +
                    `- E2E Tests: ✅\n\n` +
                    `Coverage reports have been uploaded as artifacts.`
            });

      - name: Create failure comment
        uses: actions/github-script@v8
        if: ${{ needs.unit-test.result != 'success' || needs.e2e-test.result != 'success' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, pr_number } = ${{ steps.pr_details.outputs.result }};
            const lintStatus = "${{ needs.lint.result }}" === "success" ? "✅" : "❌";
            const unitStatus = "${{ needs.unit-test.result }}" === "success" ? "✅" : "❌";
            const e2eStatus = "${{ needs.e2e-test.result }}" === "success" ? "✅" : "❌";

            github.rest.issues.createComment({
            owner,
            repo,
            issue_number: pr_number,
            body: `❌ Some checks have failed!\n\n` +
                    `- Lint: ${lintStatus}\n` +
                    `- Unit Tests: ${unitStatus}\n` +
                    `- E2E Tests: ${e2eStatus}\n\n` +
                    `Please check the workflow logs for details.`
            });
